from telebot import TeleBot, types
from colorama import Fore
from threading import Lock
from concurrent.futures import ThreadPoolExecutor

from Core.Tools.Generation.HPV_My_Clone_Army import _HPV_My_Clone_Army
from Core.Tools.Generation.HPV_Chain_Cube_2048 import _HPV_Chain_Cube_2048
from Core.Tools.Generation.HPV_Train_Miner import _HPV_Train_Miner
from Core.Tools.Generation.HPV_Bike_Ride_3D import _HPV_Bike_Ride_3D

from Core.Config.HPV_Config import TG_TOKEN
from Core.Tools.HPV_Proxy import HPV_Proxy_Checker
from Core.Tools.HPV_Banner import HPV_Banner




HPV = TeleBot(TG_TOKEN, parse_mode='HTML')



def HPV_Button(Key_Gen=True) -> types.InlineKeyboardMarkup:
    Button = types.InlineKeyboardMarkup()
    if Key_Gen:
        Button.add(types.InlineKeyboardButton('üò∂‚Äçüå´Ô∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–∏ üò∂‚Äçüå´Ô∏è', callback_data='HPV_Key_Gen'))
    Button.add(types.InlineKeyboardButton('üòé –í–ª–∞–¥–µ–ª–µ—Ü: –°–ê–ù–¢–ò–ó –ù–ê–•–£', url='https://t.me/santiz52cr'))

    return Button

def HPV_Text() -> str:
    return f'''üëãüèª<b> –ó–¥–∞—Ä–æ–≤–∞ –º–∏—Ä–∞—Å–ª–∞–≤–∏–∫ –∏ –∫–∏—Ä–∏–µ—à–∫–∞228</b>\n\n\n<b>–ú–û–ô –ë–û–¢ –°–£–ö–ê –ø–æ–∑–≤–æ–ª—è–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ 1 –∫–ª—é—á—É –¥–ª—è –∫–∞–∂–¥–æ–π –∏–≥—Ä—ã –∑–∞ —Ä–∞–∑ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞—Ö—É–π</b>'''



######################## START #########################
@HPV.message_handler(commands=['start'])  
def HPV_START(info: types.Message):
    HPV_User = info.from_user.id # ID
    HPV.send_message(HPV_User, HPV_Text(), reply_markup=HPV_Button())
########################################################



################### –ò–ù–õ–ê–ô–ù –û–ë–†–ê–ë–û–¢–ö–ê ###################
@HPV.callback_query_handler(func=lambda Call: True)
def HPV_INLINE(info: types.CallbackQuery):
    HPV_User = info.from_user.id # ID
    HPV_Message_ID = info.message.message_id # ID —Å–æ–æ–±—â–µ–Ω–∏—è
    HPV_Command = info.data # –ö–æ–º–∞–Ω–¥–∞

    if HPV_Command == 'HPV_Key_Gen':
        HPV.answer_callback_query(info.id, '‚òëÔ∏è –ñ–î–ò –°–£–ö–ê, –∏–¥—ë—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è...')
        HPV.edit_message_text('‚òëÔ∏è <b>–ñ–î–ò –°–£–ö–ê, –∏–¥—ë—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è...</b>\n\n<blockquote><i>üìå –í —Å—Ä–µ–¥–Ω–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç, –ñ–î–ò!</i></blockquote>', HPV_User, HPV_Message_ID, reply_markup=HPV_Button(False))

        Console_Lock = Lock()
        Proxy = HPV_Proxy_Checker()
        KEYS_TEXT = HPV_Text() + '\n'

        Games = [_HPV_My_Clone_Army, _HPV_Chain_Cube_2048, _HPV_Train_Miner, _HPV_Bike_Ride_3D]

        HPV_Keys = []
        with ThreadPoolExecutor() as _HPV:
            Futures = [_HPV.submit(Game, Console_Lock, 1, Proxy) for Game in Games]
            for Future in Futures:
                Keys, Status = Future.result()
                HPV_Keys.append(Keys) if Status else None

        if HPV_Keys:
            for KEYS in HPV_Keys:
                for Game, Keys in KEYS.items():
                    print(Fore.MAGENTA + '\n[SANTIZ –ò–ò–ò–£–£–£]' + Fore.GREEN + f' ‚Äî –±–µ—Ä–∏ –∫–ª—é—á –ø–∏—Å—è—Ç –¥–≤–∞ `{Game}`:\n')
                    KEYS_TEXT += f'\n‚úÖ <b>–í–∞—à–∏ –∫–ª—é—á–∏ –¥–ª—è <i>{Game}</i>:</b>\n'
                    for Key in Keys:
                        print(Fore.MAGENTA + '[SANTIZ –ò–ò–ò–£–£–£]' + Fore.GREEN + ' ‚Äî `' + Fore.WHITE + Key + Fore.GREEN + '` ///' + Fore.MAGENTA + ' t.me/santiz52cr')
                        KEYS_TEXT += f'<b>‚Äî</b> <code>{Key}</code>\n'
        else:
            KEYS_TEXT += '\n‚ùå <b>–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —ë–ø—Ç–∞. –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–∑–∂–µ!</b>'

        HPV.edit_message_text(KEYS_TEXT, HPV_User, HPV_Message_ID, reply_markup=HPV_Button())
########################################################



if __name__ == '__main__':
    while True:
        try:
            HPV_Banner()
            HPV.polling(none_stop=True) # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        except:
            continue